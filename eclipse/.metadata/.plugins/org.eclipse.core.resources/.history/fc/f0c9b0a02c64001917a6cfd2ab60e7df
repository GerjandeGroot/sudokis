/*
 * ReferenceImage.cpp
 *
 *  Created on: 20 apr. 2019
 *      Author: gerja
 */

#include "ReferenceImage.h"

ReferenceImage::ReferenceImage() {
	for (int dx = 0; dx < imageDataSize; ++dx) {
		for (int dy = 0; dy < imageDataSize; ++dy) {
			setScore(dx,dy,255);
		}
	}
}

ReferenceImage::~ReferenceImage() {
	// TODO Auto-generated destructor stub
}

void ReferenceImage::setScore(uint8_t x, uint8_t y, uint8_t score) {
	if(x>=imageDataSize || y>=imageDataSize) return;
	imageData[x][y] = score;
}

uint8_t ReferenceImage::getScore(uint8_t x, uint8_t y) {
	if(x>=imageDataSize || y>=imageDataSize) return 0;
	return imageData[x][y];
}

uint32_t ReferenceImage::generateScore(Image *image) {
	int score = 0;
	for (uint8_t x = 0; x < imageDataSize; ++x) {
		for (uint8_t y = 0; y < imageDataSize; ++y) {
			score += getScore(x,y) * image->getPixel(x,y);
		}
	}
	return score;
}

void ReferenceImage::draw(uint16_t x, uint16_t y) {
	for (int dx = 0; dx < imageDataSize; ++dx) {
		for (int dy = 0; dy < imageDataSize; ++dy) {
			drawPixelRaw(x+dx,y+dy,getScore(dx,dy),getScore(dx,dy),getScore(dx,dy));
		}
	}
}
